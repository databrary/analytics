# Assets

This report summarizes the types of files (assets) that are stored and shared.

```{r assets-setup}
source("../R/storage_gb_by_vol.R")
source("../R/CONSTANTS.R")

targets::tar_load(volume_asset_stats_df, store = "../_targets/")
```

## Volumes with shared assets {-}

There are *n*= `r length(unique(volume_asset_stats_df$vol_id))` shared volumes with assets.

The following shows the number of shared volumes with a given asset type.

```{r assets-table}
volume_asset_stats_df |>
  dplyr::group_by(format_name) |>
  dplyr::count(format_name) |>
  dplyr::arrange(desc(n)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_styling()
```

## Assets by volume {-}

The following shows data about the number of files and total storage by shared volume. 

```{r assets-by-vol-table}
vol_asset_summ <- storage_gb_by_vol(volume_asset_stats_df)

vol_asset_summ |>
  dplyr::select(vol_id, n_tot_files, tot_gb) |>
  dplyr::arrange(desc(tot_gb)) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_styling() |>
  kableExtra::scroll_box(width = "100%", height = "300px")
```

### Summary statistics {-}

The following provides summary data about the number of files and total storage provided.

```{r assets-by-vol-stats}
# min, lower-hinge, median, upper-hinge, max.
files_5_num <- fivenum(vol_asset_summ$n_tot_files)
gb_5_num <- fivenum(vol_asset_summ$tot_gb)
```

| Statistic | min | median | mean | max |
|-----------|-----|--------|------|-------|
| `n_tot_files` | `r files_5_num[1]` | `r files_5_num[3]` | `r mean(vol_asset_summ$n_tot_files)` | `r files_5_num[5]` |
| `tot_gb` | `r gb_5_num[1]` | `r gb_5_num[3]` | `r mean(vol_asset_summ$tot_gb)` | `r gb_5_num[5]` |

::: {.callout-note}
This is for *shared* data. We know that the number of private or partially-shared *volumes* is 3-5 times the number of fully shared volumes.
:::

## Assets by type, size, and duration {-}

Total number of *shared* assets, total size, and total duration by type:

```{r assets-by-type-table}
volume_asset_stats_df |>
  dplyr::group_by(format_name) |>
  dplyr::summarise(n_files = sum(n_files),
            size_gb = sum(tot_size_gb),
            dur_hrs = sum(tot_dur_hrs)) |>
  dplyr::arrange(desc(n_files)) |>
  dplyr::select(format_name, n_files, size_gb, dur_hrs) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_styling()
```

Note that the API does not show valid file types for PRIVATE volumes, and these volumes hold large quantities of video and audio.
